//--------------------------------------//               PowerUI////        For documentation or //    if you have any issues, visit//        powerUI.kulestar.com////    Copyright © 2013 Kulestar Ltd//          www.kulestar.com//--------------------------------------using System;namespace Css.Units{		/// <summary>	/// Represents an instance of a floating point value.	/// </summary>		public class DecimalUnit:CssUnit{				public float RawValue;						public DecimalUnit(float value):this(){			RawValue=value;		}				public DecimalUnit(){						// It's a number value by default:			Type=ValueType.Number;					}				public virtual float DisplayNumber{			get{				return RawValue;			}		}				public override bool Equals(Value value){						if(value==null){				return false;			}						DecimalUnit du=value as DecimalUnit;						if(du==null || value.GetType()!=GetType()){				return false;			}						return du.RawValue==RawValue;					}				public override void SetRawDecimal(float value){			RawValue=value;		}				public override float GetRawDecimal(){			return RawValue;		}				public override float GetDecimal(RenderableData context,CssProperty property){			return RawValue;		}				public override string GetText(RenderableData context,CssProperty property){			return RawValue.ToString();		}				public override bool GetBoolean(RenderableData context,CssProperty property){			return (RawValue!=0f);		}				public override string HexString{			get{				int value=(int)(RawValue*255f);				return value.ToString("X2");			}		}					public override string ToString(){						return RawValue.ToString();					}				protected override Value Clone(){			DecimalUnit result=new DecimalUnit();			result.Type=Type;			result.RawValue=RawValue;			return result;		}			}	}